or_cmh <- or1 + or2 + or3
s1 <- (df1[1,1]*df1[2,2]/sum(df1)) + (df2[1,1]*df2[2,2]/sum(df2)) +
(df3[1,1]*df3[2,2]/sum(df3))
s2 <- (df1[2,1] + df1[1,2]/sum(df1)) + (df2[2,1] + df2[1,2]/sum(df2)) +  (df3[2,1] + df3[1,2]/sum(df3))
s3 <- (((df1[1,1] + df1[2,2])*df1[2,1]*df1[1,2])/sum(df1)^2) +
(((df2[1,1] + df2[2,2])*df2[2,1]*df2[1,2])/sum(df2)^2)
s4 <- (((df1[2,1] + df1[1,2])*df1[2,1]*df1[1,2])/sum(df1)^2) +
(((df2[2,1] + df2[1,2])*df2[2,1]*df2[1,2])/sum(df2)^2) +
(((df3[2,1] + df3[1,2])*df3[2,1]*df3[1,2])/sum(df3)^2)
s5 <- (((df1[1,1] + df1[2,2])*df1[2,1]*df1[1,2]) + (df1[2,1]+df1[1,2])* df1[1,1] * df1[2,2])/sum(df1)^2 +
(((df2[1,1] + df2[2,2])*df2[2,1]*df2[1,2]) + (df2[2,1]+df2[1,2])* df2[1,1] * df2[2,2])/sum(df2)^2 +
(((df3[1,1] + df3[2,2])*df3[2,1]*df3[1,2]) + (df3[2,1]+df3[1,2])* df3[1,1] * df3[2,2])/sum(df3)^2
v_log <- (s3/(2*s1^2)) + (s5/(2*s1*s2)) + (s4/(2*s2^2))
comb_df <- df1 + df2 + df3
or_comb <- (comb_df[1,1]*comb_df[2,2])/(comb_df[2,1]*comb_df[1,2])
low_ci_log <- log(or_comb) - 1.96 * sqrt(v_log)
up_ci_log <- log(or_comb) + 1.96 * sqrt(v_log)
low_ci_or <- exp(low_ci_log)
up_ci_or <- exp(up_ci_log)
}
ormh.fun(df1,df2,df)
ormh.fun(df1,df2,df3)
ormh.fun <- function(str1, str2, str3) {
chi_top1 <- (df1[1,1] - (df1[1,1] + df1[1,2])*(df1[1,1] + df1[2,1]))/sum(df1)
chi_top2 <- (df2[1,1] - (df2[1,1] + df2[1,2])*(df2[1,1] + df2[2,1]))/sum(df2)
chi_top3 <- (df3[1,1] - (df3[1,1] + df3[1,2])*(df3[1,1] + df3[2,1]))/sum(df3)
chi_top <- (chi_top1 + chi_top2 + chi_top3)^2
chi_bot1 <- ((df1[1,1] + df1[1,2]) * (df1[2,1] + df1[2,2]) * (df1[1,1] + df1[2,1]) * (df1[1,2] + df1[2,2]))/(sum(df1)^2 * (sum(df1) - 1))
chi_bot2 <- ((df2[1,1] + df2[1,2]) * (df2[2,1] + df2[2,2]) * (df2[1,1] + df2[2,1]) * (df2[1,2] + df2[2,2]))/(sum(df2)^2 * (sum(df2) - 1))
chi_bot3 <- ((df3[1,1] + df3[1,2]) * (df3[2,1] + df3[2,2]) * (df3[1,1] + df3[2,1]) * (df3[1,2] + df3[2,2]))/(sum(df3)^2 * (sum(df3) - 1))
chi_bottom <- chi_bot1 + chi_bot2 + chi_bot3
chi_sq <- chi_top/chi_bottom
weight <- (df1[2,1] * df1[1,2]/sum(df1)) + (df2[2,1] * df2[1,2]/sum(df2)) + (df3[2,1] * df3[1,2]/sum(df3))
or1 <- ((df1[2,1] * df1[1,2]/sum(df1))/weight)*((df1[1,1]*df1[2,2])/(df1[2,1] * df1[1,2]))
or2 <- ((df2[2,1] * df2[1,2]/sum(df2))/weight)*((df2[1,1]*df2[2,2])/(df2[2,1] * df2[1,2]))
or3 <- ((df3[2,1] * df3[1,2]/sum(df3))/weight)*((df3[1,1]*df3[2,2])/(df3[2,1] * df3[1,2]))
or_cmh <- or1 + or2 + or3
s1 <- (df1[1,1]*df1[2,2]/sum(df1)) + (df2[1,1]*df2[2,2]/sum(df2)) +
(df3[1,1]*df3[2,2]/sum(df3))
s2 <- (df1[2,1] + df1[1,2]/sum(df1)) + (df2[2,1] + df2[1,2]/sum(df2)) +  (df3[2,1] + df3[1,2]/sum(df3))
s3 <- (((df1[1,1] + df1[2,2])*df1[2,1]*df1[1,2])/sum(df1)^2) +
(((df2[1,1] + df2[2,2])*df2[2,1]*df2[1,2])/sum(df2)^2)
s4 <- (((df1[2,1] + df1[1,2])*df1[2,1]*df1[1,2])/sum(df1)^2) +
(((df2[2,1] + df2[1,2])*df2[2,1]*df2[1,2])/sum(df2)^2) +
(((df3[2,1] + df3[1,2])*df3[2,1]*df3[1,2])/sum(df3)^2)
s5 <- (((df1[1,1] + df1[2,2])*df1[2,1]*df1[1,2]) + (df1[2,1]+df1[1,2])* df1[1,1] * df1[2,2])/sum(df1)^2 +
(((df2[1,1] + df2[2,2])*df2[2,1]*df2[1,2]) + (df2[2,1]+df2[1,2])* df2[1,1] * df2[2,2])/sum(df2)^2 +
(((df3[1,1] + df3[2,2])*df3[2,1]*df3[1,2]) + (df3[2,1]+df3[1,2])* df3[1,1] * df3[2,2])/sum(df3)^2
v_log <- (s3/(2*s1^2)) + (s5/(2*s1*s2)) + (s4/(2*s2^2))
comb_df <- df1 + df2 + df3
or_comb <- (comb_df[1,1]*comb_df[2,2])/(comb_df[2,1]*comb_df[1,2])
low_ci_log <- log(or_comb) - 1.96 * sqrt(v_log)
up_ci_log <- log(or_comb) + 1.96 * sqrt(v_log)
low_ci_or <- exp(low_ci_log)
up_ci_or <- exp(up_ci_log)
low_ci_or
up_ci_or
}
ormh.fun(df1,df2,df3)
log(3)
Data
ormh.fun <- function(str1, str2, str3) {
chi_top1 <- (df1[1,1] - (df1[1,1] + df1[1,2])*(df1[1,1] + df1[2,1]))/sum(df1)
chi_top2 <- (df2[1,1] - (df2[1,1] + df2[1,2])*(df2[1,1] + df2[2,1]))/sum(df2)
chi_top3 <- (df3[1,1] - (df3[1,1] + df3[1,2])*(df3[1,1] + df3[2,1]))/sum(df3)
chi_top <- (chi_top1 + chi_top2 + chi_top3)^2
chi_bot1 <- ((df1[1,1] + df1[1,2]) * (df1[2,1] + df1[2,2]) * (df1[1,1] + df1[2,1]) * (df1[1,2] + df1[2,2]))/(sum(df1)^2 * (sum(df1) - 1))
chi_bot2 <- ((df2[1,1] + df2[1,2]) * (df2[2,1] + df2[2,2]) * (df2[1,1] + df2[2,1]) * (df2[1,2] + df2[2,2]))/(sum(df2)^2 * (sum(df2) - 1))
chi_bot3 <- ((df3[1,1] + df3[1,2]) * (df3[2,1] + df3[2,2]) * (df3[1,1] + df3[2,1]) * (df3[1,2] + df3[2,2]))/(sum(df3)^2 * (sum(df3) - 1))
chi_bottom <- chi_bot1 + chi_bot2 + chi_bot3
chi_sq <- chi_top/chi_bottom
weight <- (df1[2,1] * df1[1,2]/sum(df1)) + (df2[2,1] * df2[1,2]/sum(df2)) + (df3[2,1] * df3[1,2]/sum(df3))
or1 <- ((df1[2,1] * df1[1,2]/sum(df1))/weight)*((df1[1,1]*df1[2,2])/(df1[2,1] * df1[1,2]))
or2 <- ((df2[2,1] * df2[1,2]/sum(df2))/weight)*((df2[1,1]*df2[2,2])/(df2[2,1] * df2[1,2]))
or3 <- ((df3[2,1] * df3[1,2]/sum(df3))/weight)*((df3[1,1]*df3[2,2])/(df3[2,1] * df3[1,2]))
or_cmh <- or1 + or2 + or3
s1 <- (df1[1,1]*df1[2,2]/sum(df1)) + (df2[1,1]*df2[2,2]/sum(df2)) +
(df3[1,1]*df3[2,2]/sum(df3))
s2 <- (df1[2,1] + df1[1,2]/sum(df1)) + (df2[2,1] + df2[1,2]/sum(df2)) +  (df3[2,1] + df3[1,2]/sum(df3))
s3 <- (((df1[1,1] + df1[2,2])*df1[2,1]*df1[1,2])/sum(df1)^2) +
(((df2[1,1] + df2[2,2])*df2[2,1]*df2[1,2])/sum(df2)^2)
s4 <- (((df1[2,1] + df1[1,2])*df1[2,1]*df1[1,2])/sum(df1)^2) +
(((df2[2,1] + df2[1,2])*df2[2,1]*df2[1,2])/sum(df2)^2) +
(((df3[2,1] + df3[1,2])*df3[2,1]*df3[1,2])/sum(df3)^2)
s5 <- (((df1[1,1] + df1[2,2])*df1[2,1]*df1[1,2]) + (df1[2,1]+df1[1,2])* df1[1,1] * df1[2,2])/sum(df1)^2 +
(((df2[1,1] + df2[2,2])*df2[2,1]*df2[1,2]) + (df2[2,1]+df2[1,2])* df2[1,1] * df2[2,2])/sum(df2)^2 +
(((df3[1,1] + df3[2,2])*df3[2,1]*df3[1,2]) + (df3[2,1]+df3[1,2])* df3[1,1] * df3[2,2])/sum(df3)^2
v_log <- (s3/(2*s1^2)) + (s5/(2*s1*s2)) + (s4/(2*s2^2))
comb_df <- df1 + df2 + df3
or_comb <- (comb_df[1,1]*comb_df[2,2])/(comb_df[2,1]*comb_df[1,2])
low_ci_log <- log(or_comb) - 1.96 * sqrt(v_log)
up_ci_log <- log(or_comb) + 1.96 * sqrt(v_log)
low_ci_or <- exp(low_ci_log)
up_ci_or <- exp(up_ci_log)
or_cmh
}
ormh.fun(df1, df2, df3)
par_est <- function(a,b,c,d, alpha) {
v_lor <- (1/a) + (1/b) + (1/c) + (1/d)
v_logit_par <- (or/(or-1))^2*v_lor
rr <- (a/(a+b))/(c/(c+d))
top <- alpha * (rr - 1)
bottom <- alpha * (rr) + (1-alpha)
par <- top/bottom
low_lo_ci <- log(par/(1-par)) + (1.96 * sqrt(v_logit_par))
up_lo_ci <- log(par/(1-par)) - (1.96 * sqrt(v_logit_par))
low_par <- exp(low_lo_ci)/(1 + exp(low_lo_ci))
up_par <- exp(up_lo_ci)/(1 + exp(up_lo_ci))
low_par
}
a = 154
b = 80
c = 46
d = 120
alpha1 = 0.3
par_est(a,b,c,d, alpha1)
par_est <- function(a,b,c,d, alpha) {
rr <- (a/(a+b))/(c/(c+d))
v_lor <- (1/a) + (1/b) + (1/c) + (1/d)
v_logit_par <- (rr/(rr-1))^2*v_lor
top <- alpha * (rr - 1)
bottom <- alpha * (rr) + (1-alpha)
par <- top/bottom
low_lo_ci <- log(par/(1-par)) + (1.96 * sqrt(v_logit_par))
up_lo_ci <- log(par/(1-par)) - (1.96 * sqrt(v_logit_par))
low_par <- exp(low_lo_ci)/(1 + exp(low_lo_ci))
up_par <- exp(up_lo_ci)/(1 + exp(up_lo_ci))
low_par
}
par_est(a,b,c,d, alpha1)
par
par_est <- function(a,b,c,d, alpha) {
rr <- (a/(a+b))/(c/(c+d))
v_lor <- (1/a) + (1/b) + (1/c) + (1/d)
v_logit_par <- (rr/(rr-1))^2*v_lor
top <- alpha * (rr - 1)
bottom <- alpha * (rr) + (1-alpha)
par <- top/bottom
low_lo_ci <- log(par/(1-par)) + (1.96 * sqrt(v_logit_par))
up_lo_ci <- log(par/(1-par)) - (1.96 * sqrt(v_logit_par))
low_par <- exp(low_lo_ci)/(1 + exp(low_lo_ci))
up_par <- exp(up_lo_ci)/(1 + exp(up_lo_ci))
par
}
par_est(a,b,c,d, alpha1)
par_est <- function(a,b,c,d, alpha) {
rr <- (a/(a+b))/(c/(c+d))
or <- (a+d)/(b+c)
par <- (alpha*(or -1))/(alpha * or + (1-alpha))
par
v_lor <- (1/a) + (1/b) + (1/c) + (1/d)
v_logit_par <- (rr/(rr-1))^2*v_lor
top <- alpha * (rr - 1)
bottom <- alpha * (rr) + (1-alpha)
par <- top/bottom
low_lo_ci <- log(par/(1-par)) + (1.96 * sqrt(v_logit_par))
up_lo_ci <- log(par/(1-par)) - (1.96 * sqrt(v_logit_par))
low_par <- exp(low_lo_ci)/(1 + exp(low_lo_ci))
up_par <- exp(up_lo_ci)/(1 + exp(up_lo_ci))
}
par_est(a,b,c,d, alpha1)
par_est <- function(a,b,c,d, alpha) {
rr <- (a/(a+b))/(c/(c+d))
or <- (a+d)/(b+c)
par <- (alpha*(or -1))/(alpha * or + (1-alpha))
v_lor <- (1/a) + (1/b) + (1/c) + (1/d)
v_logit_par <- (rr/(rr-1))^2*v_lor
top <- alpha * (rr - 1)
bottom <- alpha * (rr) + (1-alpha)
par <- top/bottom
low_lo_ci <- log(par/(1-par)) + (1.96 * sqrt(v_logit_par))
up_lo_ci <- log(par/(1-par)) - (1.96 * sqrt(v_logit_par))
low_par <- exp(low_lo_ci)/(1 + exp(low_lo_ci))
up_par <- exp(up_lo_ci)/(1 + exp(up_lo_ci))
par
}
par_est(a,b,c,d, alpha1)
(a+d)/(b+c)
(a/(a+b))/(c/(c+d))
list(df1,df2,df3)
list_df <- list(df1,df2,df3)
list_df[[1]]
list_df[[1]][1,1]
ormh <- function(list_df) {
for (i in 1:length(list_df)){
a <- c(list_df[[i]][1,1])
b <- c(list_df[[i]][2,1])
c <- c(list_df[[i]][1,2])
d <- c(list_df[[i]][2,2])
}
a
}
ormh(list_df)
ormh <- function(list_df) {
a <- vector()
for (i in 1:length(list_df)){
a <- c(list_df[[i]][1,1])
b <- c(list_df[[i]][2,1])
c <- c(list_df[[i]][1,2])
d <- c(list_df[[i]][2,2])
}
a
}
ormh(list_df)
ormh <- function(list_df) {
a <- vector()
for (i in 1:length(list_df)){
a[i] <- c(list_df[[i]][1,1])
b[i] <- c(list_df[[i]][2,1])
c <- c(list_df[[i]][1,2])
d <- c(list_df[[i]][2,2])
}
a
}
ormh(list_df)
ormh <- function(list_df) {
a <- vector()
b <- vector()
c <- vector()
d <- vector()
for (i in 1:length(list_df)){
a[i] <- c(list_df[[i]][1,1])
b[i] <- c(list_df[[i]][2,1])
c[i] <- c(list_df[[i]][1,2])
d[i] <- c(list_df[[i]][2,2])
}
n1 <- a + c
n2 <- b + d
m1 <- a + b
m2 <- c + d
N <- a + b + c + d
vk <- ((b[1]*c[1])/(N[1])) + ((b[2]*c[2])/(N[2])) +
((b[3]*c[3])/(N[3]))
weight1 <- (b[1]*c[1]/N[1])/vk
weight2 <- (b[2]*c[2]/N[2])/vk
weight3 <- (b[3]*c[3]/N[3])/vk
ork1 <- (a[1]*d[1])/(b[1]*c[1])
ork2 <- (a[2]*d[2])/(b[2]*c[2])
ork3 <- (a[3]*d[3])/(b[3]*c[3])
orcmh <- (weight1 * ork1) + (weight2 * ork2) +
(weight3 * ork3)
orcmh
}
ormh(list_df)
Data <- as.table(array(c(24,1,22,4,35,2,35,4,31,5,38,3,46,7,42,15,60,13,51,28,39,14,32,20), dim = c(2, 2, 6),
dimnames =
list(Exposure=c("Exposed", "NotExposed"),Response = c("Case", "Control"),
Age = c("50-54","55-59","60-64","65-69","70-74","75-79"))))
Data
ormh <- function(list_df) {
a <- vector()
b <- vector()
c <- vector()
d <- vector()
for (i in 1:length(list_df)){
a[i] <- c(list_df[[i]][1,1])
b[i] <- c(list_df[[i]][2,1])
c[i] <- c(list_df[[i]][1,2])
d[i] <- c(list_df[[i]][2,2])
}
n1 <- a + c
n2 <- b + d
m1 <- a + b
m2 <- c + d
N <- a + b + c + d
vk <- sum(b*c/N)
weight <- vector()
ork <- vector()
for (i in 1:length(list_df)) {
weight[i] <- (b[i]*c[i]/N[i])/vk
ork[i] <- (a[i] * d[i])/(b[i]*c[i])
}
orcmh <- sum(weight * ork)
orcmh
}
ormh(list_df)
log(1.29)
exp(1.29)
df1 <- data.frame(case = c(24,1), control = c(22,4))
df2 <- data.frame(case = c(35,2), control = c(35,4))
df3 <- data.frame(case = c(31,5), control = c(38,3))
df4 <- data.frame(case = c(46,7), control = c(42,15))
df5 <- data.frame(case = c(60,13), control = c(51,28))
df6 <- data.frame(case = c(39,14), control = c(32,20))
list_df <- list(df1,df2,df3, df4, df5, df6)
ormh <- function(list_df) {
a <- vector()
b <- vector()
c <- vector()
d <- vector()
for (i in 1:length(list_df)){
a[i] <- c(list_df[[i]][1,1])
b[i] <- c(list_df[[i]][2,1])
c[i] <- c(list_df[[i]][1,2])
d[i] <- c(list_df[[i]][2,2])
}
n1 <- a + c
n2 <- b + d
m1 <- a + b
m2 <- c + d
N <- a + b + c + d
vk <- sum(b*c/N)
weight <- vector()
ork <- vector()
for (i in 1:length(list_df)) {
weight[i] <- (b[i]*c[i]/N[i])/vk
ork[i] <- (a[i] * d[i])/(b[i]*c[i])
}
orcmh <- sum(weight * ork)
s1 <- sum(a*d/N)
s2 <- sum(b*c/N)
s3 <- sum(((a + d) *a*d)/N^2)
s4 <- sum(((c + b) *c*b)/N^2)
s5 <- sum((((a+d)*b*c) + (b+c)*a*d)/N^2)
vlog <- (s3/(2*s1^2)) + (s5/(2*s1*s2)) + (s4/(2*s2^2))
low_log_ci <- log(orcmh) - 1.96*sqrt(vlog)
high_log_ci <- log(orcmh) + 1.96*sqrt(vlog)
low_ci <- exp(low_log_ci)
high_ci <- exp(high_log_ci)
orcmh
}
ormh(list_df)
ormh <- function(list_df) {
a <- vector()
b <- vector()
c <- vector()
d <- vector()
for (i in 1:length(list_df)){
a[i] <- c(list_df[[i]][1,1])
b[i] <- c(list_df[[i]][2,1])
c[i] <- c(list_df[[i]][1,2])
d[i] <- c(list_df[[i]][2,2])
}
n1 <- a + c
n2 <- b + d
m1 <- a + b
m2 <- c + d
N <- a + b + c + d
vk <- sum(b*c/N)
weight <- vector()
ork <- vector()
for (i in 1:length(list_df)) {
weight[i] <- (b[i]*c[i]/N[i])/vk
ork[i] <- (a[i] * d[i])/(b[i]*c[i])
}
orcmh <- sum(weight * ork)
s1 <- sum(a*d/N)
s2 <- sum(b*c/N)
s3 <- sum(((a + d) *a*d)/N^2)
s4 <- sum(((c + b) *c*b)/N^2)
s5 <- sum((((a+d)*b*c) + (b+c)*a*d)/N^2)
vlog <- (s3/(2*s1^2)) + (s5/(2*s1*s2)) + (s4/(2*s2^2))
low_log_ci <- log(orcmh) - 1.96*sqrt(vlog)
high_log_ci <- log(orcmh) + 1.96*sqrt(vlog)
low_ci <- exp(low_log_ci)
high_ci <- exp(high_log_ci)
print(paste("ORCMH: ", orcmh, sep = ""))
}
ormh(list_df)
ormh <- function(list_df) {
a <- vector()
b <- vector()
c <- vector()
d <- vector()
for (i in 1:length(list_df)){
a[i] <- c(list_df[[i]][1,1])
b[i] <- c(list_df[[i]][2,1])
c[i] <- c(list_df[[i]][1,2])
d[i] <- c(list_df[[i]][2,2])
}
n1 <- a + c
n2 <- b + d
m1 <- a + b
m2 <- c + d
N <- a + b + c + d
vk <- sum(b*c/N)
weight <- vector()
ork <- vector()
for (i in 1:length(list_df)) {
weight[i] <- (b[i]*c[i]/N[i])/vk
ork[i] <- (a[i] * d[i])/(b[i]*c[i])
}
orcmh <- sum(weight * ork)
s1 <- sum(a*d/N)
s2 <- sum(b*c/N)
s3 <- sum(((a + d) *a*d)/N^2)
s4 <- sum(((c + b) *c*b)/N^2)
s5 <- sum((((a+d)*b*c) + (b+c)*a*d)/N^2)
vlog <- (s3/(2*s1^2)) + (s5/(2*s1*s2)) + (s4/(2*s2^2))
low_log_ci <- log(orcmh) - 1.96*sqrt(vlog)
high_log_ci <- log(orcmh) + 1.96*sqrt(vlog)
low_ci <- exp(low_log_ci)
high_ci <- exp(high_log_ci)
print(paste("OR CMH estimate: ", orcmh, sep = ""))
print(paste("V(ORCMH) estimate: ", vlog, sep = ""))
print(paste("CI common OR: ", low_ci, ", ", "high_ci", sep = ""))
}
ormh(list_df)
ormh <- function(list_df) {
a <- vector()
b <- vector()
c <- vector()
d <- vector()
for (i in 1:length(list_df)){
a[i] <- c(list_df[[i]][1,1])
b[i] <- c(list_df[[i]][2,1])
c[i] <- c(list_df[[i]][1,2])
d[i] <- c(list_df[[i]][2,2])
}
n1 <- a + c
n2 <- b + d
m1 <- a + b
m2 <- c + d
N <- a + b + c + d
vk <- sum(b*c/N)
weight <- vector()
ork <- vector()
for (i in 1:length(list_df)) {
weight[i] <- (b[i]*c[i]/N[i])/vk
ork[i] <- (a[i] * d[i])/(b[i]*c[i])
}
orcmh <- sum(weight * ork)
s1 <- sum(a*d/N)
s2 <- sum(b*c/N)
s3 <- sum(((a + d) *a*d)/N^2)
s4 <- sum(((c + b) *c*b)/N^2)
s5 <- sum((((a+d)*b*c) + (b+c)*a*d)/N^2)
vlog <- (s3/(2*s1^2)) + (s5/(2*s1*s2)) + (s4/(2*s2^2))
low_log_ci <- log(orcmh) - 1.96*sqrt(vlog)
high_log_ci <- log(orcmh) + 1.96*sqrt(vlog)
low_ci <- exp(low_log_ci)
high_ci <- exp(high_log_ci)
print(paste("OR CMH estimate: ", orcmh, sep = ""))
print(paste("V(ORCMH) estimate: ", vlog, sep = ""))
print(paste("CI common OR: ", low_ci, ", ", high_ci, sep = ""))
}
ormh(list_df)
exp(0.048)
log(0.048)
par_est <- function(a,b,c,d, alpha) {
rr <- (a/(a+b))/(c/(c+d))
or <- (a*d)/(b*c)
par <- (alpha*(or -1))/(alpha * or + (1-alpha))
v_lor <- (1/a) + (1/b) + (1/c) + (1/d)
v_logit_par <- (rr/(rr-1))^2*v_lor
top <- alpha * (rr - 1)
bottom <- alpha * (rr) + (1-alpha)
par <- top/bottom
low_lo_ci <- log(par/(1-par)) + (1.96 * sqrt(v_logit_par))
up_lo_ci <- log(par/(1-par)) - (1.96 * sqrt(v_logit_par))
low_par <- exp(low_lo_ci)/(1 + exp(low_lo_ci))
up_par <- exp(up_lo_ci)/(1 + exp(up_lo_ci))
print(paste("PAR Estimate: ", par, sep = ""))
print(paste("PAR CI: ", low_par, ",", up_par))
}
a = 154
b = 80
c = 46
d = 120
alpha1 = 0.3
par_est(a,b,c,d, alpha1)
par_est <- function(a,b,c,d, alpha) {
rr <- (a/(a+b))/(c/(c+d))
or <- (a*d)/(b*c)
par <- (alpha*(or -1))/((alpha * or) + (1-alpha))
v_lor <- (1/a) + (1/b) + (1/c) + (1/d)
v_logit_par <- (rr/(rr-1))^2*v_lor
top <- alpha * (rr - 1)
bottom <- alpha * (rr) + (1-alpha)
par <- top/bottom
low_lo_ci <- log(par/(1-par)) + (1.96 * sqrt(v_logit_par))
up_lo_ci <- log(par/(1-par)) - (1.96 * sqrt(v_logit_par))
low_par <- exp(low_lo_ci)/(1 + exp(low_lo_ci))
up_par <- exp(up_lo_ci)/(1 + exp(up_lo_ci))
print(paste("PAR Estimate: ", par, sep = ""))
print(paste("PAR CI: ", low_par, ",", up_par))
}
par_est(a,b,c,d, alpha1)
par_est <- function(a,b,c,d, alpha) {
alpha_two <- 1-alpha
or <- (a*d)/(b*c)
par <- (alpha*(or-1))/(alpha*or)+alpha_two
par
}
a = 154
b = 80
c = 46
d = 120
alpha1 = 0.3
par_est(a,b,c,d, alpha1)
par_est(a =154,b = 80, c = 46,d = 120, alpha =0.3)
par_est <- function(a,b,c,d, alpha) {
alpha_two <- 1-alpha
or <- (a*d)/(b*c)
par <- (alpha*(or-1))/((alpha*or)+alpha_two)
par
}
par_est(a =154,b = 80, c = 46,d = 120, alpha =0.3)
par_est <- function(a,b,c,d, alpha) {
alpha_two <- 1-alpha
or <- (a*d)/(b*c)
par <- (alpha*(or-1))/((alpha*or)+alpha_two)
v_lor <- (1/a) + (1/b) + (1/c) + (1/d)
v_logit_par <- (or/(or-1))^2*v_lor
low_lo_ci <- log(par/(1-par)) + (1.96 * sqrt(v_logit_par))
up_lo_ci <- log(par/(1-par)) - (1.96 * sqrt(v_logit_par))
low_par <- exp(low_lo_ci)/(1 + exp(low_lo_ci))
up_par <- exp(up_lo_ci)/(1 + exp(up_lo_ci))
print(paste("PAR Estimate: ", par, sep = ""))
print(paste("PAR CI: ", low_par, ",", up_par))
}
par_est(a =154,b = 80, c = 46,d = 120, alpha =0.3)
